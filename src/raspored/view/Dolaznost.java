package raspored.view;

import java.awt.Color;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import raspored.controller.Obrada;
import raspored.model.Predmet;
import raspored.model.Student;
import raspored.pomocno.HibernateUtil;
import raspored.pomocno.StudentRenderer;

/**
 *
 * @author FeritApostol
 */
public class Dolaznost extends javax.swing.JFrame {

    private Border obrub;
    private Student odabraniStudent;
    private Predmet odabraniPredmet;
    private Obrada<Student> obrada;
    
    /**
     * Creates new form Dolaznost
     */
    public Dolaznost() {
        initComponents();
        
        obrada = new Obrada<>();
        
        lista.setCellRenderer(new StudentRenderer());
        
        napuniStudente();
        
        ucitajPodatke();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSati = new javax.swing.JComboBox<>();
        btnDodaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        btnBack = new javax.swing.JButton();
        cmbStudent = new javax.swing.JComboBox<>();
        btnObrisi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbSati.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "4" }));

        btnDodaj.setBackground(new java.awt.Color(0, 0, 0));
        btnDodaj.setForeground(new java.awt.Color(51, 255, 0));
        btnDodaj.setText("Dodaj Broj Sati");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setForeground(new java.awt.Color(255, 255, 0));
        btnBack.setText("<Povratak>");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnObrisi.setBackground(new java.awt.Color(0, 0, 0));
        btnObrisi.setForeground(new java.awt.Color(255, 0, 0));
        btnObrisi.setText("Obriši broj sati");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setText("DOLAZNOST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodaj))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbSati, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSati, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnDodaj))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        resetirajGreske();
        if (!kontrola()) {
            return;
        }
        Student s = lista.getSelectedValue();
        s.setBrojDolaznosti(s.getBrojDolaznosti() + Integer.parseInt(cmbSati.getSelectedItem().toString()));
        
        
        obrada.save(s);
        ucitajPodatke();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        if(evt.getValueIsAdjusting()){
            return;
        }
        odabraniStudent = lista.getSelectedValue();
        if(odabraniStudent == null){
            return;
        }  
       
       //s.setPostotak(new BigDecimal(s.getBrojDolaznosti()/p.getBrojSati()));
    }//GEN-LAST:event_listaValueChanged

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        resetirajGreske();
        if (!kontrola()) {
            return;
        }
        Student s = lista.getSelectedValue();
        s.setBrojDolaznosti(s.getBrojDolaznosti() - Integer.parseInt(cmbSati.getSelectedItem().toString()));
        
        obrada.save(s);
        ucitajPodatke();
    }//GEN-LAST:event_btnObrisiActionPerformed

    private Student napuniObjekt(Student s){
        s.setBrojDolaznosti(Integer.parseInt((String)cmbSati.getSelectedItem()));
        //Vjerojatno je i ovo greška..
        s.setPredmeti((List<Predmet>) cmbStudent.getItemAt(cmbStudent.getSelectedIndex()));

        return s;
    }
    
    private void napuniStudente(){
        DefaultComboBoxModel<Predmet> model = new DefaultComboBoxModel<>();

        List<Predmet> lista = HibernateUtil.getSession().createQuery(
                "from Predmet").list();

        for (Predmet p : lista) {
            model.addElement(p);
        }

        this.cmbStudent.setModel(model);
    }
    
    private void ucitajPodatke() {
        
        DefaultListModel<Student> model = new DefaultListModel<>();

        List<Student> lista = HibernateUtil.getSession().createQuery(
                "from Student").list();
       
        for (Student s : lista) {
            model.addElement(s);
        }
        this.lista.setModel(model);

    }
 
    private boolean kontrola() {
        Student s = lista.getSelectedValue();
        if (s == null) {
            JOptionPane.showMessageDialog(getRootPane(), "Prvo odaberite studenta");
            return false;
        }
        if (cmbSati.getSelectedItem()== null){
            JOptionPane.showMessageDialog(getRootPane(), "Nisi odabrao broj sati");
            return false;
        }
        if (cmbStudent.getSelectedItem()== null){
            JOptionPane.showMessageDialog(getRootPane(), "Nisi odabrao predmet");
            return false;
        }
        return true;
        
    } 
    private void oznaciGresku(JTextField polje) {
        polje.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
        polje.requestFocus();
    }
    
     private void resetirajGreske() {
         cmbSati.setBorder(obrub);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JComboBox<String> cmbSati;
    private javax.swing.JComboBox<Predmet> cmbStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Student> lista;
    // End of variables declaration//GEN-END:variables
}
